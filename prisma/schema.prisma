datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Define card value
model Card {
  id           Int         @id @default(autoincrement())
  collectionId Int?
  collection   Collection? @relation(fields: [collectionId], references: [id])
  type         CardType
  value        Int
}

// Track cards in deck or participant hand as appropriate
model Collection {
  id          Int            @id @default(autoincrement())
  Participant Participant?
  cards       Card[]
  type        CollectionType
}

// Can represent either players or dealers
model Participant {
  id          Int        @id @default(autoincrement())
  name        String
  handId      Int
  hand        Collection @relation(fields: [handId], references: [id])
  playingGame Game?      @relation("PlayingRel")
  dealingGame Game?      @relation("DealingRel")
  role        Role
  money       Int        @default(0)
}

// Monitor overall game state
model Game {
  id          Int         @id @default(autoincrement())
  currentTurn Role        @default(PLAYER)
  winner      WinState    @default(PENDING)
  playerId    Int
  dealerId    Int
  player      Participant @relation(name: "PlayingRel", fields: [playerId], references: [id])
  dealer      Participant @relation(name: "DealingRel", fields: [dealerId], references: [id])
}

// Some enumerations to make certain attribute values a little easier to reason
// about.
enum WinState {
  PLAYER_WIN
  DEALER_WIN
  PENDING
}

enum Role {
  PLAYER
  DEALER
}

enum CardType {
  FACECARD
  SPOT
  ACE
}

enum CollectionType {
  DECK
  HAND
}
